
CREATE TABLE de_santos_materials_Products (
  ID NVARCHAR(36) NOT NULL,
  createdAt TIMESTAMP_TEXT,
  createdBy NVARCHAR(255),
  modifiedAt TIMESTAMP_TEXT,
  modifiedBy NVARCHAR(255),
  Name NVARCHAR(255) NOT NULL,
  Description NVARCHAR(255),
  ImageUrl NVARCHAR(255),
  ReleaseDate DATETIME_TEXT DEFAULT CURRENT_TIMESTAMP,
  DiscontinuedDate DATETIME_TEXT,
  Price DECIMAL(16, 2),
  Height DECIMAL(16, 2),
  Width DECIMAL(16, 2),
  Depth DECIMAL(16, 2),
  Quantity DECIMAL(16, 2),
  Supplier_ID NVARCHAR(36),
  UnitOfMeasure_ID NVARCHAR(2),
  Currency_ID NVARCHAR(3),
  DimensionUnit_ID NVARCHAR(2),
  Category_ID NVARCHAR(1),
  PriceCondition NVARCHAR(2),
  PriceDetermination NVARCHAR(3),
  PRIMARY KEY(ID)
);

CREATE TABLE de_santos_materials_Categories (
  ID NVARCHAR(1) NOT NULL,
  createdAt TIMESTAMP_TEXT,
  createdBy NVARCHAR(255),
  modifiedAt TIMESTAMP_TEXT,
  modifiedBy NVARCHAR(255),
  Name NVARCHAR(255),
  PRIMARY KEY(ID)
);

CREATE TABLE de_santos_materials_StockAvailability (
  ID INTEGER NOT NULL,
  Description NVARCHAR(255),
  Product_ID NVARCHAR(36),
  PRIMARY KEY(ID)
);

CREATE TABLE de_santos_materials_Currencies (
  ID NVARCHAR(3) NOT NULL,
  Description NVARCHAR(255),
  PRIMARY KEY(ID)
);

CREATE TABLE de_santos_materials_UnitOfMeasures (
  ID NVARCHAR(2) NOT NULL,
  Description NVARCHAR(255),
  PRIMARY KEY(ID)
);

CREATE TABLE de_santos_materials_DimensionUnits (
  ID NVARCHAR(2) NOT NULL,
  Description NVARCHAR(255),
  PRIMARY KEY(ID)
);

CREATE TABLE de_santos_materials_ProductReview (
  ID NVARCHAR(36) NOT NULL,
  createdAt TIMESTAMP_TEXT,
  createdBy NVARCHAR(255),
  modifiedAt TIMESTAMP_TEXT,
  modifiedBy NVARCHAR(255),
  Name NVARCHAR(255),
  Rating NVARCHAR(255),
  Comment NVARCHAR(255),
  Product_ID NVARCHAR(36),
  PRIMARY KEY(ID)
);

CREATE TABLE de_santos_sales_Suppliers (
  ID NVARCHAR(36) NOT NULL,
  createdAt TIMESTAMP_TEXT,
  createdBy NVARCHAR(255),
  modifiedAt TIMESTAMP_TEXT,
  modifiedBy NVARCHAR(255),
  Name NVARCHAR(255),
  Address_Street NVARCHAR(255),
  Address_City NVARCHAR(255),
  Address_State NVARCHAR(2),
  Address_PostalCode NVARCHAR(5),
  Address_Country NVARCHAR(3),
  Email NVARCHAR(255),
  Phone NVARCHAR(255),
  Fax NVARCHAR(255),
  PRIMARY KEY(ID)
);

CREATE TABLE de_santos_sales_Orders (
  ID NVARCHAR(36) NOT NULL,
  Date DATETIME_TEXT,
  Customer NVARCHAR(255),
  PRIMARY KEY(ID)
);

CREATE TABLE de_santos_sales_OrderItems (
  ID NVARCHAR(36) NOT NULL,
  Order_ID NVARCHAR(36),
  Product_ID NVARCHAR(36),
  Quantity INTEGER,
  PRIMARY KEY(ID)
);

CREATE TABLE de_santos_sales_SalesData (
  ID NVARCHAR(36) NOT NULL,
  createdAt TIMESTAMP_TEXT,
  createdBy NVARCHAR(255),
  modifiedAt TIMESTAMP_TEXT,
  modifiedBy NVARCHAR(255),
  DeliveryDate DATETIME_TEXT,
  Revenue DECIMAL(16, 2),
  Product_ID NVARCHAR(36),
  Currency_ID NVARCHAR(3),
  DeliveryMonth_ID NVARCHAR(2),
  PRIMARY KEY(ID)
);

CREATE TABLE de_santos_sales_Months (
  ID NVARCHAR(2) NOT NULL,
  Description NVARCHAR(255),
  ShortDescription NVARCHAR(3),
  PRIMARY KEY(ID)
);

CREATE TABLE de_santos_materials_Products_texts (
  locale NVARCHAR(14) NOT NULL,
  ID NVARCHAR(36) NOT NULL,
  Name NVARCHAR(255) NOT NULL,
  Description NVARCHAR(255),
  PRIMARY KEY(locale, ID)
);

CREATE TABLE de_santos_materials_Categories_texts (
  locale NVARCHAR(14) NOT NULL,
  ID NVARCHAR(1) NOT NULL,
  Name NVARCHAR(255),
  PRIMARY KEY(locale, ID)
);

CREATE TABLE de_santos_materials_StockAvailability_texts (
  locale NVARCHAR(14) NOT NULL,
  ID INTEGER NOT NULL,
  Description NVARCHAR(255),
  PRIMARY KEY(locale, ID)
);

CREATE TABLE de_santos_materials_Currencies_texts (
  locale NVARCHAR(14) NOT NULL,
  ID NVARCHAR(3) NOT NULL,
  Description NVARCHAR(255),
  PRIMARY KEY(locale, ID)
);

CREATE TABLE de_santos_materials_UnitOfMeasures_texts (
  locale NVARCHAR(14) NOT NULL,
  ID NVARCHAR(2) NOT NULL,
  Description NVARCHAR(255),
  PRIMARY KEY(locale, ID)
);

CREATE TABLE de_santos_materials_DimensionUnits_texts (
  locale NVARCHAR(14) NOT NULL,
  ID NVARCHAR(2) NOT NULL,
  Description NVARCHAR(255),
  PRIMARY KEY(locale, ID)
);

CREATE TABLE de_santos_sales_Months_texts (
  locale NVARCHAR(14) NOT NULL,
  ID NVARCHAR(2) NOT NULL,
  Description NVARCHAR(255),
  ShortDescription NVARCHAR(3),
  PRIMARY KEY(locale, ID)
);

CREATE VIEW de_santos_materials_ProjectionProductsAll AS SELECT
  Products_0.ID,
  Products_0.createdAt,
  Products_0.createdBy,
  Products_0.modifiedAt,
  Products_0.modifiedBy,
  Products_0.Name,
  Products_0.Description,
  Products_0.ImageUrl,
  Products_0.ReleaseDate,
  Products_0.DiscontinuedDate,
  Products_0.Price,
  Products_0.Height,
  Products_0.Width,
  Products_0.Depth,
  Products_0.Quantity,
  Products_0.Supplier_ID,
  Products_0.UnitOfMeasure_ID,
  Products_0.Currency_ID,
  Products_0.DimensionUnit_ID,
  Products_0.Category_ID,
  Products_0.PriceCondition,
  Products_0.PriceDetermination
FROM de_santos_materials_Products AS Products_0;

CREATE VIEW de_santos_materials_ProjectionProductsAll2 AS SELECT
  Products_0.ID,
  Products_0.createdAt,
  Products_0.createdBy,
  Products_0.modifiedAt,
  Products_0.modifiedBy,
  Products_0.Name,
  Products_0.Description,
  Products_0.ImageUrl,
  Products_0.ReleaseDate,
  Products_0.DiscontinuedDate,
  Products_0.Price,
  Products_0.Height,
  Products_0.Width,
  Products_0.Depth,
  Products_0.Quantity,
  Products_0.Supplier_ID,
  Products_0.UnitOfMeasure_ID,
  Products_0.Currency_ID,
  Products_0.DimensionUnit_ID,
  Products_0.Category_ID,
  Products_0.PriceCondition,
  Products_0.PriceDetermination
FROM de_santos_materials_Products AS Products_0;

CREATE VIEW de_santos_materials_ProjectionProductsSimple AS SELECT
  Products_0.Name,
  Products_0.ReleaseDate
FROM de_santos_materials_Products AS Products_0;

CREATE VIEW de_santos_sales_SelectProductsAll1 AS SELECT
  Products_0.ID,
  Products_0.createdAt,
  Products_0.createdBy,
  Products_0.modifiedAt,
  Products_0.modifiedBy,
  Products_0.Name,
  Products_0.Description,
  Products_0.ImageUrl,
  Products_0.ReleaseDate,
  Products_0.DiscontinuedDate,
  Products_0.Price,
  Products_0.Height,
  Products_0.Width,
  Products_0.Depth,
  Products_0.Quantity,
  Products_0.Supplier_ID,
  Products_0.UnitOfMeasure_ID,
  Products_0.Currency_ID,
  Products_0.DimensionUnit_ID,
  Products_0.Category_ID,
  Products_0.PriceCondition,
  Products_0.PriceDetermination
FROM de_santos_materials_Products AS Products_0;

CREATE VIEW de_santos_sales_SelectProductsAll2 AS SELECT
  Products_0.ID,
  Products_0.createdAt,
  Products_0.createdBy,
  Products_0.modifiedAt,
  Products_0.modifiedBy,
  Products_0.Name,
  Products_0.Description,
  Products_0.ImageUrl,
  Products_0.ReleaseDate,
  Products_0.DiscontinuedDate,
  Products_0.Price,
  Products_0.Height,
  Products_0.Width,
  Products_0.Depth,
  Products_0.Quantity,
  Products_0.Supplier_ID,
  Products_0.UnitOfMeasure_ID,
  Products_0.Currency_ID,
  Products_0.DimensionUnit_ID,
  Products_0.Category_ID,
  Products_0.PriceCondition,
  Products_0.PriceDetermination
FROM de_santos_materials_Products AS Products_0;

CREATE VIEW de_santos_sales_SelectProductsSimple AS SELECT
  Products_0.Name,
  Products_0.Price,
  Products_0.Quantity
FROM de_santos_materials_Products AS Products_0;

CREATE VIEW de_santos_sales_SelectProductsJoin AS SELECT
  Products_0.Name,
  ProductReview_1.Rating,
  sum(Products_0.Price) AS TotalPrice
FROM (de_santos_materials_Products AS Products_0 LEFT JOIN de_santos_materials_ProductReview AS ProductReview_1 ON Products_0.Name = ProductReview_1.Name)
GROUP BY Products_0.Name, ProductReview_1.Rating
ORDER BY Rating;

CREATE VIEW de_santos_reports_AverageRating AS SELECT
  ProductReview_0.Product_ID AS ProductId,
  avg(ProductReview_0.Rating) AS AverageRating
FROM de_santos_materials_ProductReview AS ProductReview_0
GROUP BY ProductReview_0.Product_ID;

CREATE VIEW localized_de_santos_materials_Products AS SELECT
  L_0.ID,
  L_0.createdAt,
  L_0.createdBy,
  L_0.modifiedAt,
  L_0.modifiedBy,
  coalesce(localized_1.Name, L_0.Name) AS Name,
  coalesce(localized_1.Description, L_0.Description) AS Description,
  L_0.ImageUrl,
  L_0.ReleaseDate,
  L_0.DiscontinuedDate,
  L_0.Price,
  L_0.Height,
  L_0.Width,
  L_0.Depth,
  L_0.Quantity,
  L_0.Supplier_ID,
  L_0.UnitOfMeasure_ID,
  L_0.Currency_ID,
  L_0.DimensionUnit_ID,
  L_0.Category_ID,
  L_0.PriceCondition,
  L_0.PriceDetermination
FROM (de_santos_materials_Products AS L_0 LEFT JOIN de_santos_materials_Products_texts AS localized_1 ON localized_1.ID = L_0.ID AND localized_1.locale = session_context( '$user.locale' ));

CREATE VIEW localized_de_santos_materials_Categories AS SELECT
  L_0.ID,
  L_0.createdAt,
  L_0.createdBy,
  L_0.modifiedAt,
  L_0.modifiedBy,
  coalesce(localized_1.Name, L_0.Name) AS Name
FROM (de_santos_materials_Categories AS L_0 LEFT JOIN de_santos_materials_Categories_texts AS localized_1 ON localized_1.ID = L_0.ID AND localized_1.locale = session_context( '$user.locale' ));

CREATE VIEW localized_de_santos_materials_StockAvailability AS SELECT
  L_0.ID,
  coalesce(localized_1.Description, L_0.Description) AS Description,
  L_0.Product_ID
FROM (de_santos_materials_StockAvailability AS L_0 LEFT JOIN de_santos_materials_StockAvailability_texts AS localized_1 ON localized_1.ID = L_0.ID AND localized_1.locale = session_context( '$user.locale' ));

CREATE VIEW localized_de_santos_materials_Currencies AS SELECT
  L_0.ID,
  coalesce(localized_1.Description, L_0.Description) AS Description
FROM (de_santos_materials_Currencies AS L_0 LEFT JOIN de_santos_materials_Currencies_texts AS localized_1 ON localized_1.ID = L_0.ID AND localized_1.locale = session_context( '$user.locale' ));

CREATE VIEW localized_de_santos_materials_UnitOfMeasures AS SELECT
  L_0.ID,
  coalesce(localized_1.Description, L_0.Description) AS Description
FROM (de_santos_materials_UnitOfMeasures AS L_0 LEFT JOIN de_santos_materials_UnitOfMeasures_texts AS localized_1 ON localized_1.ID = L_0.ID AND localized_1.locale = session_context( '$user.locale' ));

CREATE VIEW localized_de_santos_materials_DimensionUnits AS SELECT
  L_0.ID,
  coalesce(localized_1.Description, L_0.Description) AS Description
FROM (de_santos_materials_DimensionUnits AS L_0 LEFT JOIN de_santos_materials_DimensionUnits_texts AS localized_1 ON localized_1.ID = L_0.ID AND localized_1.locale = session_context( '$user.locale' ));

CREATE VIEW localized_de_santos_sales_Months AS SELECT
  L_0.ID,
  coalesce(localized_1.Description, L_0.Description) AS Description,
  coalesce(localized_1.ShortDescription, L_0.ShortDescription) AS ShortDescription
FROM (de_santos_sales_Months AS L_0 LEFT JOIN de_santos_sales_Months_texts AS localized_1 ON localized_1.ID = L_0.ID AND localized_1.locale = session_context( '$user.locale' ));

CREATE VIEW de_santos_reports_Products AS SELECT
  Products_0.ID,
  Products_0.createdAt,
  Products_0.createdBy,
  Products_0.modifiedAt,
  Products_0.modifiedBy,
  Products_0.Name,
  Products_0.Description,
  Products_0.ImageUrl,
  Products_0.ReleaseDate,
  Products_0.DiscontinuedDate,
  Products_0.Price,
  Products_0.Height,
  Products_0.Width,
  Products_0.Depth,
  Products_0.Quantity,
  Products_0.Supplier_ID,
  Products_0.UnitOfMeasure_ID,
  Products_0.Currency_ID,
  Products_0.DimensionUnit_ID,
  Products_0.Category_ID,
  Products_0.PriceCondition,
  Products_0.PriceDetermination,
  ToAverageRating_1.AverageRating AS Rating,
  CASE WHEN Products_0.Quantity >= 8 THEN 3 WHEN Products_0.Quantity > 0 THEN 2 ELSE 1 END AS StockAvailability
FROM (de_santos_materials_Products AS Products_0 LEFT JOIN de_santos_reports_AverageRating AS ToAverageRating_1 ON ToAverageRating_1.ProductId = Products_0.ID);

CREATE VIEW localized_de_santos_materials_ProjectionProductsAll AS SELECT
  Products_0.ID,
  Products_0.createdAt,
  Products_0.createdBy,
  Products_0.modifiedAt,
  Products_0.modifiedBy,
  Products_0.Name,
  Products_0.Description,
  Products_0.ImageUrl,
  Products_0.ReleaseDate,
  Products_0.DiscontinuedDate,
  Products_0.Price,
  Products_0.Height,
  Products_0.Width,
  Products_0.Depth,
  Products_0.Quantity,
  Products_0.Supplier_ID,
  Products_0.UnitOfMeasure_ID,
  Products_0.Currency_ID,
  Products_0.DimensionUnit_ID,
  Products_0.Category_ID,
  Products_0.PriceCondition,
  Products_0.PriceDetermination
FROM localized_de_santos_materials_Products AS Products_0;

CREATE VIEW localized_de_santos_materials_ProjectionProductsAll2 AS SELECT
  Products_0.ID,
  Products_0.createdAt,
  Products_0.createdBy,
  Products_0.modifiedAt,
  Products_0.modifiedBy,
  Products_0.Name,
  Products_0.Description,
  Products_0.ImageUrl,
  Products_0.ReleaseDate,
  Products_0.DiscontinuedDate,
  Products_0.Price,
  Products_0.Height,
  Products_0.Width,
  Products_0.Depth,
  Products_0.Quantity,
  Products_0.Supplier_ID,
  Products_0.UnitOfMeasure_ID,
  Products_0.Currency_ID,
  Products_0.DimensionUnit_ID,
  Products_0.Category_ID,
  Products_0.PriceCondition,
  Products_0.PriceDetermination
FROM localized_de_santos_materials_Products AS Products_0;

CREATE VIEW localized_de_santos_materials_ProjectionProductsSimple AS SELECT
  Products_0.Name,
  Products_0.ReleaseDate
FROM localized_de_santos_materials_Products AS Products_0;

CREATE VIEW localized_de_santos_sales_SelectProductsAll1 AS SELECT
  Products_0.ID,
  Products_0.createdAt,
  Products_0.createdBy,
  Products_0.modifiedAt,
  Products_0.modifiedBy,
  Products_0.Name,
  Products_0.Description,
  Products_0.ImageUrl,
  Products_0.ReleaseDate,
  Products_0.DiscontinuedDate,
  Products_0.Price,
  Products_0.Height,
  Products_0.Width,
  Products_0.Depth,
  Products_0.Quantity,
  Products_0.Supplier_ID,
  Products_0.UnitOfMeasure_ID,
  Products_0.Currency_ID,
  Products_0.DimensionUnit_ID,
  Products_0.Category_ID,
  Products_0.PriceCondition,
  Products_0.PriceDetermination
FROM localized_de_santos_materials_Products AS Products_0;

CREATE VIEW localized_de_santos_sales_SelectProductsAll2 AS SELECT
  Products_0.ID,
  Products_0.createdAt,
  Products_0.createdBy,
  Products_0.modifiedAt,
  Products_0.modifiedBy,
  Products_0.Name,
  Products_0.Description,
  Products_0.ImageUrl,
  Products_0.ReleaseDate,
  Products_0.DiscontinuedDate,
  Products_0.Price,
  Products_0.Height,
  Products_0.Width,
  Products_0.Depth,
  Products_0.Quantity,
  Products_0.Supplier_ID,
  Products_0.UnitOfMeasure_ID,
  Products_0.Currency_ID,
  Products_0.DimensionUnit_ID,
  Products_0.Category_ID,
  Products_0.PriceCondition,
  Products_0.PriceDetermination
FROM localized_de_santos_materials_Products AS Products_0;

CREATE VIEW localized_de_santos_sales_SelectProductsSimple AS SELECT
  Products_0.Name,
  Products_0.Price,
  Products_0.Quantity
FROM localized_de_santos_materials_Products AS Products_0;

CREATE VIEW localized_de_santos_sales_SelectProductsJoin AS SELECT
  Products_0.Name,
  ProductReview_1.Rating,
  sum(Products_0.Price) AS TotalPrice
FROM (localized_de_santos_materials_Products AS Products_0 LEFT JOIN de_santos_materials_ProductReview AS ProductReview_1 ON Products_0.Name = ProductReview_1.Name)
GROUP BY Products_0.Name, ProductReview_1.Rating
ORDER BY Rating;

CREATE VIEW localized_de_santos_reports_Products AS SELECT
  Products_0.ID,
  Products_0.createdAt,
  Products_0.createdBy,
  Products_0.modifiedAt,
  Products_0.modifiedBy,
  Products_0.Name,
  Products_0.Description,
  Products_0.ImageUrl,
  Products_0.ReleaseDate,
  Products_0.DiscontinuedDate,
  Products_0.Price,
  Products_0.Height,
  Products_0.Width,
  Products_0.Depth,
  Products_0.Quantity,
  Products_0.Supplier_ID,
  Products_0.UnitOfMeasure_ID,
  Products_0.Currency_ID,
  Products_0.DimensionUnit_ID,
  Products_0.Category_ID,
  Products_0.PriceCondition,
  Products_0.PriceDetermination,
  ToAverageRating_1.AverageRating AS Rating,
  CASE WHEN Products_0.Quantity >= 8 THEN 3 WHEN Products_0.Quantity > 0 THEN 2 ELSE 1 END AS StockAvailability
FROM (localized_de_santos_materials_Products AS Products_0 LEFT JOIN de_santos_reports_AverageRating AS ToAverageRating_1 ON ToAverageRating_1.ProductId = Products_0.ID);

